#二叉树进行美式期权定价
#分别是看涨期权和看跌期权
from math import exp,sqrt
def binomialCallAmerican(s,x,T,r,sigma,maxiter=50):
    deltaT=T/maxiter
    u=exp(sigma * sqrt(deltaT))
    d=1.0 / u
    a = exp(r*deltaT)
    p=(a-d) / (u-d)
    v = [[0.0 for j in xrange(i + 1)] for i in xrange (maxiter+1)]
    for j in xrange(i+1):
        v[maxiter][j] = max(s* u**j * d**(maxiter-j)-x,0.0)
    for i in xrange(maxiter-1,-1,-1):
        for j in xrange(i + 1):
            v1=exp(-r*deltaT)*(p*v[i+1][j+1]+(1.0-p)*v[i+1][j])
            v2=max(s*u**j * d**(i-j)-x,0)
            v[i][j]=max(v1,v2)
    return v[0][0]

def binomialCallAmerican1(s,x,T,r,sigma,maxiter=50):
    deltaT=T/maxiter
    u=exp(sigma * sqrt(deltaT))
    d=1.0 / u
    a = exp(r*deltaT)
    p=(a-d) / (u-d)
    v = [[0.0 for j in xrange(i + 1)] for i in xrange (maxiter+1)]
    for j in xrange(i+1):
        v[maxiter][j] = max(x-s* u**j * d**(maxiter-j),0.0)
    for i in xrange(maxiter-1,-1,-1):
        for j in xrange(i + 1):
            v1=exp(-r*deltaT)*(p*v[i+1][j+1]+(1.0-p)*v[i+1][j])
            v2=max(x-s*u**j * d**(i-j),0)
            v[i][j]=max(v1,v2)
    return v[0][0]
